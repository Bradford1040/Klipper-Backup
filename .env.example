# --- GitHub Configuration ---
# Your GitHub Personal Access Token (PAT)
# Required scopes: 'repo' for private repos, 'public_repo' for public repos.
github_token=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Your GitHub username
github_username=YourGitHubUsername

# The name of the repository on GitHub you want to back up to
github_repository=YourKlipperBackupRepo

# --- Git Configuration ---
# The branch name to use for backups
branch_name="main"

# Optional: Username for Git commits (if empty, script uses system username)
commit_username=""

# Optional: Email for Git commits (if empty, script generates one)
commit_email=""

# --- Backup Configuration ---
# Array of paths relative to $HOME to back up.
# The installer will replace this block with a default pointing to your config dir.
# Example format:
backupPaths=( \
"printer_data/config/*" \
# "printer_data/logs/*" # Example of another path to uncomment/add
# ".theme/*"            # Example for Mainsail themes
)

# Space-separated list of file patterns to exclude from backup (uses .gitignore syntax)
# Defaults are provided in script.sh if this is empty or missing.
exclude="*.swp *.tmp printer-[0-9]*_[0-9]*.cfg *.bkp *.csv *.zip"

# --- Script Behavior ---
# Allow commits even if no files changed? (true/false)
allow_empty_commits=true

# Use changed filenames as commit message instead of timestamp? (true/false)
use_filenames_as_commit_msg=false

# --- Advanced Git Settings ---
# Git protocol to use (https or ssh)
git_protocol="https"

# Git host domain (e.g., github.com or a GitHub Enterprise domain)
git_host="github.com"

# SSH username (only used if git_protocol is ssh)
ssh_user="git"

